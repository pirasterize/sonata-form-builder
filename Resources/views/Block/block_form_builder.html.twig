{% if success is defined and success %}
    <div class="form-success">
        <h1>{{ formBuilder.getSubmissionTitle|default('success_title'|trans) }}</h1>
        <p>{{ formBuilder.getSubmissionText|default('success_message'|trans) }}</p>
    </div>
{% else %}
    {% if formBuilderId is defined and formBuilderId is not null %}

        {% if form is defined %}
            {% form_theme form "PirastruFormBuilderBundle:Block:_form_theme.html.twig" %}
            <form method="POST" class="form-horizontal" {{ form_enctype(form) }}>

                {{ form_widget(form) }}

                <input type="hidden" name="formId" class="form-num " value="{{ formBuilderId }}">
            </form>


            <link rel="stylesheet"
                  href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.min.css"
                  integrity="sha256-sEGfrwMkIjbgTBwGLVK38BG/XwIiNC/EAG9Rzsfda6A=" crossorigin="anonymous"/>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"
                    integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"
                    integrity="sha256-KM512VNnjElC30ehFwehXjx1YCHPiQkOPmqnrWtpccM=" crossorigin="anonymous"></script>
            <script>
                $(function () {
                    $(".js-datepicker").datepicker({dateFormat: 'dd-mm-yy'});

                    $("*[id*=form_builder]").submit(function (e) {
                        e.preventDefault();
                        validateCheckboxes(this);
                    });

                });

                var validateCheckboxes = function(formEl) {
                    var checkboxes = {},
                        checkbox,
                        errors = 0;

                    $(formEl).find(".form-group label[class*=required]").each(function(i, el){

                        var formGroup = $(el).parent();

                        $(formGroup).find("input[type=checkbox]").each(function(i, el2) {
                            checkbox = $(el2).attr("name");
                            if (checkboxes.hasOwnProperty(checkbox)) {
                                checkboxes[checkbox].push($(el2));
                            }
                            else {
                                checkboxes[checkbox] = [$(el2)];
                            }
                        });
                    });

                    var errorMessage = "{{ 'This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.'|transchoice(1, {limit: '1'}, 'validators') }}";
                    var errorMessage = errorMessage.replace(/({|})/g, '');
                    for (var checkboxGroup in checkboxes) {
                        if (!checkboxes.hasOwnProperty(checkboxGroup)) {
                            continue;
                        }
                        if (checkboxes[checkboxGroup].length <= 1) {
                            delete checkboxes[checkboxGroup];
                            continue;
                        }

                        var groupRequiredCheckboxes = $(checkboxes[checkboxGroup][0]).closest('.form-group');

                        var amountChecked = $(groupRequiredCheckboxes).find('input[type=checkbox]:checked').length;

                        if (amountChecked <= 0) {

                            if ($(groupRequiredCheckboxes).find('.help-block').length > 0) {
                                continue;
                            }
                            errors++;
                            var lastCheckbox = $(groupRequiredCheckboxes).find("[class*=checkbox]").last();

                            $("<span class=\"help-block\" style=\"color:red;padding: 5px 0;\">"+
                                errorMessage
                                +"<br></span>")
                                .insertAfter(lastCheckbox);
                        }
                    }

                    if (errors === 0) {
                        // Remove custom event handler
                        $(formEl).off('submit');
                        // Perform default submit
                        $(formEl).submit();
                    }
                }
            </script>
        {% endif %}
    {% else %}
        Form not found !
    {% endif %}
{% endif %}